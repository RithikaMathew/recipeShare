{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useParams,Link}from'react-router-dom';import{supabase}from'../client';import'./DetailView.css';import{formatDistanceToNow}from'date-fns';// used to display the distance between a given date and the current time in words\nimport{useNavigate}from'react-router-dom';import{jsxs as _jsxs,jsx as _jsx}from\"react/jsx-runtime\";const DetailView=()=>{const{id}=useParams();const[post,setPost]=useState({});const[count,setCount]=useState(0);const[comment,setComment]=useState(\"\");const[comments,setComments]=useState([]);const navigate=useNavigate();// Fetch the post with the given id\nuseEffect(()=>{const fetchPost=async()=>{const{data}=await supabase.from('Posts').select().eq('id',id).single();setPost(data);};fetchPost();},[id]);// Fetch the upvotes for the post\nuseEffect(()=>{const fetchCount=async()=>{const{data}=await supabase.from('Posts').select('upvotes').eq('id',id).single();setCount(data.upvotes);};fetchCount();},[id]);// Update the upvotes for the post\nconst updateCount=async event=>{event.preventDefault();await supabase.from('Posts').update({upvotes:count+1}).eq('id',id);setCount(count=>count+1);};// Delete the post\nconst deletePost=async event=>{event.preventDefault();await supabase.from('Posts').delete().eq('id',id);navigate(\"/read\");};// Fetch the comments for the post\nuseEffect(()=>{const fetchComments=async()=>{const{data}=await supabase.from('Comments').select().eq('postId',id);setComments(data);};fetchComments();},[id]);// Submit a comment\nconst submitComment=async event=>{event.preventDefault();if(!comment.trim())return;// Insert comment\nawait supabase.from('Comments').insert([{postId:id,comment:comment}]);// Fetch comments after insertion\nconst selectResponse=await supabase.from('Comments').select().eq('postId',id);setComments(selectResponse.data);setComment(\"\");// Clear comment field\n};return/*#__PURE__*/_jsxs(\"div\",{className:\"DetailView\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"row1\",children:[post.created_at&&/*#__PURE__*/_jsxs(\"p\",{children:[\"Posted \",formatDistanceToNow(new Date(post.created_at),{addSuffix:true})]}),/*#__PURE__*/_jsx(Link,{to:\"/edit/\".concat(id),children:/*#__PURE__*/_jsx(\"button\",{children:\" \\uD83D\\uDD8B\\uFE0F\"})}),/*#__PURE__*/_jsx(\"button\",{onClick:deletePost,children:\" \\uD83D\\uDDD1\\uFE0F\"})]}),/*#__PURE__*/_jsx(\"h2\",{children:\"Title: \"+post.title}),post.image&&/*#__PURE__*/_jsx(\"img\",{src:post.image,alt:post.title}),/*#__PURE__*/_jsx(\"p\",{children:\"Author: \"+post.author}),/*#__PURE__*/_jsx(\"p\",{children:\"Description: \"+post.description}),/*#__PURE__*/_jsxs(\"button\",{id:\"up\",onClick:updateCount,children:[\"\\uD83D\\uDC4D \",count,\" upvotes\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"comments\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Comments\"}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"ul\",{children:comments.map((current_element,index)=>/*#__PURE__*/_jsx(\"li\",{children:current_element.comment},index))})}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:submitComment,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:comment,onChange:e=>setComment(e.target.value),placeholder:\"Write a comment...\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Submit Comment\"})]})]})]});};export default DetailView;","map":{"version":3,"names":["React","useState","useEffect","useParams","Link","supabase","formatDistanceToNow","useNavigate","jsxs","_jsxs","jsx","_jsx","DetailView","id","post","setPost","count","setCount","comment","setComment","comments","setComments","navigate","fetchPost","data","from","select","eq","single","fetchCount","upvotes","updateCount","event","preventDefault","update","deletePost","delete","fetchComments","submitComment","trim","insert","postId","selectResponse","className","children","created_at","Date","addSuffix","to","concat","onClick","title","image","src","alt","author","description","map","current_element","index","onSubmit","type","value","onChange","e","target","placeholder"],"sources":["C:/Users/rithi/OneDrive/Desktop/web stack/final - Copy/client/src/pages/DetailView.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams, Link } from 'react-router-dom';\r\nimport { supabase } from '../client';\r\nimport './DetailView.css';\r\nimport { formatDistanceToNow } from 'date-fns'; // used to display the distance between a given date and the current time in words\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst DetailView = () => {\r\n  const { id } = useParams();\r\n  const [post, setPost] = useState({});\r\n  const [count, setCount] = useState(0);\r\n  const [comment, setComment] = useState(\"\");\r\n  const [comments, setComments] = useState([]);\r\n  const navigate = useNavigate();\r\n\r\n  // Fetch the post with the given id\r\n  useEffect(() => {\r\n    const fetchPost = async () => {\r\n      const { data } = await supabase\r\n        .from('Posts')\r\n        .select()\r\n        .eq('id', id)\r\n        .single();\r\n\r\n      setPost(data);\r\n    };\r\n\r\n    fetchPost();\r\n  }, [id]);\r\n\r\n  // Fetch the upvotes for the post\r\n  useEffect(() => {\r\n    const fetchCount = async () => {\r\n      const { data } = await supabase\r\n        .from('Posts')\r\n        .select('upvotes')\r\n        .eq('id', id)\r\n        .single();\r\n\r\n      setCount(data.upvotes);\r\n    };\r\n\r\n    fetchCount();\r\n  }, [id]);\r\n\r\n  // Update the upvotes for the post\r\n  const updateCount = async (event) => {\r\n    event.preventDefault();\r\n\r\n    await supabase\r\n      .from('Posts')\r\n      .update({ upvotes: count + 1 })\r\n      .eq('id', id);\r\n\r\n    setCount((count) => count + 1);\r\n  };\r\n\r\n  // Delete the post\r\n  const deletePost = async (event) => {\r\n    event.preventDefault();\r\n    await supabase\r\n      .from('Posts')\r\n      .delete()\r\n      .eq('id', id);\r\n      navigate(\"/read\");\r\n    };\r\n\r\n  // Fetch the comments for the post\r\n  useEffect(() => {\r\n    const fetchComments = async () => {\r\n      const { data } = await supabase\r\n        .from('Comments')\r\n        .select()\r\n        .eq('postId', id);\r\n      setComments(data);\r\n\r\n    };\r\n\r\n    fetchComments();\r\n  }, [id]);\r\n\r\n  // Submit a comment\r\n  const submitComment = async (event) => {\r\n    event.preventDefault();\r\n    if (!comment.trim()) return;\r\n\r\n    // Insert comment\r\n   await supabase\r\n      .from('Comments')\r\n      .insert([{ postId: id, comment: comment }]);\r\n\r\n    // Fetch comments after insertion\r\n    const selectResponse = await supabase\r\n      .from('Comments')\r\n      .select()\r\n      .eq('postId', id);\r\n    setComments(selectResponse.data);\r\n\r\n\r\n    setComment(\"\"); // Clear comment field\r\n  };\r\n\r\n  return (\r\n    <div className=\"DetailView\">\r\n      <div className=\"row1\">\r\n        {post.created_at && (\r\n          <p>Posted {formatDistanceToNow(new Date(post.created_at), { addSuffix: true })}</p>\r\n        )}\r\n        <Link to={`/edit/${id}`}><button> üñãÔ∏è</button></Link>\r\n        <button onClick={deletePost}> üóëÔ∏è</button>\r\n      </div>\r\n      <h2>{\"Title: \" + post.title}</h2>\r\n      {post.image && (<img src={post.image} alt={post.title} />)}\r\n      <p>{\"Author: \" + post.author}</p>\r\n      <p>{\"Description: \" + post.description}</p>\r\n      <button id='up' onClick={updateCount}>üëç {count} upvotes</button>\r\n      <div className=\"comments\">\r\n        <h3>Comments</h3>\r\n        <div>\r\n          <ul>\r\n            {comments.map((current_element, index) => (\r\n              <li key={index}>{current_element.comment}</li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n        <form onSubmit={submitComment}>\r\n          <input\r\n            type=\"text\"\r\n            value={comment}\r\n            onChange={(e) => setComment(e.target.value)}\r\n            placeholder=\"Write a comment...\"\r\n          />\r\n          <button type=\"submit\">Submit Comment</button>\r\n        </form>\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DetailView;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}