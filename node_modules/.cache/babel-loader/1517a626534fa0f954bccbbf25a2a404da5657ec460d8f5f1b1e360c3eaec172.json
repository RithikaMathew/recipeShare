{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rithi\\\\OneDrive\\\\Desktop\\\\web stack\\\\final - Copy\\\\client\\\\src\\\\pages\\\\DetailView.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport { supabase } from '../client';\nimport './DetailView.css';\nimport { formatDistanceToNow } from 'date-fns'; // used to display the distance between a given date and the current time in words\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DetailView = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [post, setPost] = useState({});\n  const [count, setCount] = useState(0);\n  const [comment, setComment] = useState(\"\");\n  const [comments, setComments] = useState([]);\n  const navigate = useNavigate();\n\n  // Fetch the post with the given id\n  useEffect(() => {\n    const fetchPost = async () => {\n      const {\n        data\n      } = await supabase.from('Posts').select().eq('id', id).single();\n      setPost(data);\n    };\n    fetchPost();\n  }, [id]);\n\n  // Fetch the upvotes for the post\n  useEffect(() => {\n    const fetchCount = async () => {\n      const {\n        data\n      } = await supabase.from('Posts').select('upvotes').eq('id', id).single();\n      setCount(data.upvotes);\n    };\n    fetchCount();\n  }, [id]);\n\n  // Update the upvotes for the post\n  const updateCount = async event => {\n    event.preventDefault();\n    await supabase.from('Posts').update({\n      upvotes: count + 1\n    }).eq('id', id);\n    setCount(count => count + 1);\n  };\n\n  // Delete the post\n  const deletePost = async event => {\n    event.preventDefault();\n    await supabase.from('Posts').delete().eq('id', id);\n    navigate(\"/read\");\n  };\n\n  // Fetch the comments for the post\n  useEffect(() => {\n    const fetchComments = async () => {\n      const {\n        data\n      } = await supabase.from('Comments').select().eq('postId', id);\n      setComments(data);\n    };\n    fetchComments();\n  }, [id]);\n\n  // Submit a comment\n  const submitComment = async event => {\n    event.preventDefault();\n    if (!comment.trim()) return;\n    try {\n      // Insert comment\n      const {\n        data: newComment,\n        error\n      } = await supabase.from('Comments').insert([{\n        postId: id,\n        comment: comment\n      }]).single();\n      if (error) {\n        throw error;\n      }\n\n      // Update comments state\n      setComments(comments => [...comments, newComment]);\n\n      // Clear comment field\n      setComment(\"\");\n    } catch (error) {\n      console.error('Error submitting comment:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"DetailView\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row1\",\n      children: [post.created_at && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Posted \", formatDistanceToNow(new Date(post.created_at), {\n          addSuffix: true\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: `/edit/${id}`,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \" \\uD83D\\uDD8B\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: deletePost,\n        children: \" \\uD83D\\uDDD1\\uFE0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Title: \" + post.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), post.image && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: post.image,\n      alt: post.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Author: \" + post.author\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Description: \" + post.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"up\",\n      onClick: updateCount,\n      children: [\"\\uD83D\\uDC4D \", count, \" upvotes\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comments\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Comments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: comments.map((current_element, index) => current_element && /*#__PURE__*/_jsxDEV(\"li\", {\n            children: current_element.comment\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 24\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: submitComment,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: comment,\n          onChange: e => setComment(e.target.value),\n          placeholder: \"Write a comment...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit Comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n};\n_s(DetailView, \"yEa6EVSMpS8EoDgGvAJKVC/LqGU=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = DetailView;\nexport default DetailView;\nvar _c;\n$RefreshReg$(_c, \"DetailView\");","map":{"version":3,"names":["React","useState","useEffect","useParams","Link","supabase","formatDistanceToNow","useNavigate","jsxDEV","_jsxDEV","DetailView","_s","id","post","setPost","count","setCount","comment","setComment","comments","setComments","navigate","fetchPost","data","from","select","eq","single","fetchCount","upvotes","updateCount","event","preventDefault","update","deletePost","delete","fetchComments","submitComment","trim","newComment","error","insert","postId","console","className","children","created_at","Date","addSuffix","fileName","_jsxFileName","lineNumber","columnNumber","to","onClick","title","image","src","alt","author","description","map","current_element","index","onSubmit","type","value","onChange","e","target","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/rithi/OneDrive/Desktop/web stack/final - Copy/client/src/pages/DetailView.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams, Link } from 'react-router-dom';\r\nimport { supabase } from '../client';\r\nimport './DetailView.css';\r\nimport { formatDistanceToNow } from 'date-fns'; // used to display the distance between a given date and the current time in words\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst DetailView = () => {\r\n  const { id } = useParams();\r\n  const [post, setPost] = useState({});\r\n  const [count, setCount] = useState(0);\r\n  const [comment, setComment] = useState(\"\");\r\n  const [comments, setComments] = useState([]);\r\n  const navigate = useNavigate();\r\n\r\n  // Fetch the post with the given id\r\n  useEffect(() => {\r\n    const fetchPost = async () => {\r\n      const { data } = await supabase\r\n        .from('Posts')\r\n        .select()\r\n        .eq('id', id)\r\n        .single();\r\n\r\n      setPost(data);\r\n    };\r\n\r\n    fetchPost();\r\n  }, [id]);\r\n\r\n  // Fetch the upvotes for the post\r\n  useEffect(() => {\r\n    const fetchCount = async () => {\r\n      const { data } = await supabase\r\n        .from('Posts')\r\n        .select('upvotes')\r\n        .eq('id', id)\r\n        .single();\r\n\r\n      setCount(data.upvotes);\r\n    };\r\n\r\n    fetchCount();\r\n  }, [id]);\r\n\r\n  // Update the upvotes for the post\r\n  const updateCount = async (event) => {\r\n    event.preventDefault();\r\n\r\n    await supabase\r\n      .from('Posts')\r\n      .update({ upvotes: count + 1 })\r\n      .eq('id', id);\r\n\r\n    setCount((count) => count + 1);\r\n  };\r\n\r\n  // Delete the post\r\n  const deletePost = async (event) => {\r\n    event.preventDefault();\r\n    await supabase\r\n      .from('Posts')\r\n      .delete()\r\n      .eq('id', id);\r\n      navigate(\"/read\");\r\n    };\r\n\r\n  // Fetch the comments for the post\r\n  useEffect(() => {\r\n    const fetchComments = async () => {\r\n      const { data } = await supabase\r\n        .from('Comments')\r\n        .select()\r\n        .eq('postId', id);\r\n      setComments(data);\r\n\r\n    };\r\n\r\n    fetchComments();\r\n  }, [id]);\r\n\r\n  // Submit a comment\r\n  const submitComment = async (event) => {\r\n    event.preventDefault();\r\n    if (!comment.trim()) return;\r\n\r\n    try {\r\n        // Insert comment\r\n        const { data: newComment, error } = await supabase\r\n            .from('Comments')\r\n            .insert([{ postId: id, comment: comment }])\r\n            .single();\r\n\r\n        if (error) {\r\n            throw error;\r\n        }\r\n\r\n        // Update comments state\r\n        setComments((comments) => [...comments, newComment]);\r\n\r\n        // Clear comment field\r\n        setComment(\"\");\r\n    } catch (error) {\r\n        console.error('Error submitting comment:', error);\r\n    }\r\n};\r\n\r\n  return (\r\n    <div className=\"DetailView\">\r\n      <div className=\"row1\">\r\n        {post.created_at && (\r\n          <p>Posted {formatDistanceToNow(new Date(post.created_at), { addSuffix: true })}</p>\r\n        )}\r\n        <Link to={`/edit/${id}`}><button> 🖋️</button></Link>\r\n        <button onClick={deletePost}> 🗑️</button>\r\n      </div>\r\n      <h2>{\"Title: \" + post.title}</h2>\r\n      {post.image && (<img src={post.image} alt={post.title} />)}\r\n      <p>{\"Author: \" + post.author}</p>\r\n      <p>{\"Description: \" + post.description}</p>\r\n      <button id='up' onClick={updateCount}>👍 {count} upvotes</button>\r\n      <div className=\"comments\">\r\n        <h3>Comments</h3>\r\n        <div>\r\n          <ul>\r\n          {comments.map((current_element, index) => (\r\n    current_element && <li key={index}>{current_element.comment}</li>\r\n))}\r\n          </ul>\r\n        </div>\r\n        <form onSubmit={submitComment}>\r\n          <input\r\n            type=\"text\"\r\n            value={comment}\r\n            onChange={(e) => setComment(e.target.value)}\r\n            placeholder=\"Write a comment...\"\r\n          />\r\n          <button type=\"submit\">Submit Comment</button>\r\n        </form>\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DetailView;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}