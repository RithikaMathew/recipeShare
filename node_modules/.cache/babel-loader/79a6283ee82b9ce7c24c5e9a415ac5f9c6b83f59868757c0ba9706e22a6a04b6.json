{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useParams,Link}from'react-router-dom';import{supabase}from'../client';import'./DetailView.css';import{formatDistanceToNow}from'date-fns';// used to display the distance between a given date and the current time in words\nimport{jsxs as _jsxs,jsx as _jsx}from\"react/jsx-runtime\";const DetailView=()=>{const{id}=useParams();const[post,setPost]=useState({});const[count,setCount]=useState(0);const[comment,setComment]=useState(\"\");const[comments,setComments]=useState([]);// Fetch the post with the given id\nuseEffect(()=>{const fetchPost=async()=>{const{data}=await supabase.from('Posts').select().eq('id',id).single();setPost(data);};fetchPost();},[id]);// Fetch the upvotes for the post\nuseEffect(()=>{const fetchCount=async()=>{const{data}=await supabase.from('Posts').select('upvotes').eq('id',id).single();setCount(data.upvotes);};fetchCount();},[id]);// Update the upvotes for the post\nconst updateCount=async event=>{event.preventDefault();await supabase.from('Posts').update({upvotes:count+1}).eq('id',id);setCount(count=>count+1);};// Delete the post\nconst deletePost=async event=>{event.preventDefault();await supabase.from('Posts').delete().eq('id',id);window.location=\"/read\";};// Fetch the comments for the post\nuseEffect(()=>{const fetchComments=async()=>{const{data}=await supabase.from('Comments').select().eq('postId',id);setComments(data);};fetchComments();},[id]);// Submit a comment\nconst submitComment=async event=>{event.preventDefault();if(!comment.trim())return;// Insert comment\nconst insertResponse=await supabase.from('Comments').insert([{postId:id,comment:comment}]);// Fetch comments after insertion\nconst selectResponse=await supabase.from('Comments').select().eq('postId',id);setComments(selectResponse.data);setComment(\"\");// Clear comment field\n};return/*#__PURE__*/_jsxs(\"div\",{className:\"DetailView\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"row1\",children:[post.created_at&&/*#__PURE__*/_jsxs(\"p\",{children:[\"Posted \",formatDistanceToNow(new Date(post.created_at),{addSuffix:true})]}),/*#__PURE__*/_jsx(Link,{to:\"/edit/\".concat(id),children:/*#__PURE__*/_jsx(\"button\",{children:\" \\uD83D\\uDD8B\\uFE0F\"})}),/*#__PURE__*/_jsx(\"button\",{onClick:deletePost,children:\" \\uD83D\\uDDD1\\uFE0F\"})]}),/*#__PURE__*/_jsx(\"h2\",{children:\"Title: \"+post.title}),post.image&&/*#__PURE__*/_jsx(\"img\",{src:post.image,alt:post.title}),/*#__PURE__*/_jsx(\"p\",{children:\"Author: \"+post.author}),/*#__PURE__*/_jsx(\"p\",{children:\"Description: \"+post.description}),/*#__PURE__*/_jsxs(\"button\",{id:\"up\",onClick:updateCount,children:[\"\\uD83D\\uDC4D \",count,\" upvotes\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"comments\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Comments\"}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"ul\",{children:comments.map((current_element,index)=>/*#__PURE__*/_jsx(\"li\",{children:current_element.comment},index))})}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:submitComment,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:comment,onChange:e=>setComment(e.target.value),placeholder:\"Write a comment...\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Submit Comment\"})]})]})]});};export default DetailView;","map":{"version":3,"names":["React","useState","useEffect","useParams","Link","supabase","formatDistanceToNow","jsxs","_jsxs","jsx","_jsx","DetailView","id","post","setPost","count","setCount","comment","setComment","comments","setComments","fetchPost","data","from","select","eq","single","fetchCount","upvotes","updateCount","event","preventDefault","update","deletePost","delete","window","location","fetchComments","submitComment","trim","insertResponse","insert","postId","selectResponse","className","children","created_at","Date","addSuffix","to","concat","onClick","title","image","src","alt","author","description","map","current_element","index","onSubmit","type","value","onChange","e","target","placeholder"],"sources":["C:/Users/rithi/OneDrive/Desktop/web stack/final - Copy/client/src/pages/DetailView.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams, Link } from 'react-router-dom';\r\nimport { supabase } from '../client';\r\nimport './DetailView.css';\r\nimport { formatDistanceToNow } from 'date-fns'; // used to display the distance between a given date and the current time in words\r\n\r\nconst DetailView = () => {\r\n  const { id } = useParams();\r\n  const [post, setPost] = useState({});\r\n  const [count, setCount] = useState(0);\r\n  const [comment, setComment] = useState(\"\");\r\n  const [comments, setComments] = useState([]);\r\n\r\n  // Fetch the post with the given id\r\n  useEffect(() => {\r\n    const fetchPost = async () => {\r\n      const { data } = await supabase\r\n        .from('Posts')\r\n        .select()\r\n        .eq('id', id)\r\n        .single();\r\n\r\n      setPost(data);\r\n    };\r\n\r\n    fetchPost();\r\n  }, [id]);\r\n\r\n  // Fetch the upvotes for the post\r\n  useEffect(() => {\r\n    const fetchCount = async () => {\r\n      const { data } = await supabase\r\n        .from('Posts')\r\n        .select('upvotes')\r\n        .eq('id', id)\r\n        .single();\r\n\r\n      setCount(data.upvotes);\r\n    };\r\n\r\n    fetchCount();\r\n  }, [id]);\r\n\r\n  // Update the upvotes for the post\r\n  const updateCount = async (event) => {\r\n    event.preventDefault();\r\n\r\n    await supabase\r\n      .from('Posts')\r\n      .update({ upvotes: count + 1 })\r\n      .eq('id', id);\r\n\r\n    setCount((count) => count + 1);\r\n  };\r\n\r\n  // Delete the post\r\n  const deletePost = async (event) => {\r\n    event.preventDefault();\r\n    await supabase\r\n      .from('Posts')\r\n      .delete()\r\n      .eq('id', id);\r\n    window.location = \"/read\";\r\n  };\r\n\r\n  // Fetch the comments for the post\r\n  useEffect(() => {\r\n    const fetchComments = async () => {\r\n      const { data } = await supabase\r\n        .from('Comments')\r\n        .select()\r\n        .eq('postId', id);\r\n      setComments(data);\r\n\r\n    };\r\n\r\n    fetchComments();\r\n  }, [id]);\r\n\r\n  // Submit a comment\r\n  const submitComment = async (event) => {\r\n    event.preventDefault();\r\n    if (!comment.trim()) return;\r\n\r\n    // Insert comment\r\n    const insertResponse = await supabase\r\n      .from('Comments')\r\n      .insert([{ postId: id, comment: comment }]);\r\n\r\n    // Fetch comments after insertion\r\n    const selectResponse = await supabase\r\n      .from('Comments')\r\n      .select()\r\n      .eq('postId', id);\r\n    setComments(selectResponse.data);\r\n\r\n\r\n    setComment(\"\"); // Clear comment field\r\n  };\r\n\r\n  return (\r\n    <div className=\"DetailView\">\r\n      <div className=\"row1\">\r\n        {post.created_at && (\r\n          <p>Posted {formatDistanceToNow(new Date(post.created_at), { addSuffix: true })}</p>\r\n        )}\r\n        <Link to={`/edit/${id}`}><button> üñãÔ∏è</button></Link>\r\n        <button onClick={deletePost}> üóëÔ∏è</button>\r\n      </div>\r\n      <h2>{\"Title: \" + post.title}</h2>\r\n      {post.image && (<img src={post.image} alt={post.title} />)}\r\n      <p>{\"Author: \" + post.author}</p>\r\n      <p>{\"Description: \" + post.description}</p>\r\n      <button id='up' onClick={updateCount}>üëç {count} upvotes</button>\r\n      <div className=\"comments\">\r\n        <h3>Comments</h3>\r\n        <div>\r\n          <ul>\r\n            {comments.map((current_element, index) => (\r\n              <li key={index}>{current_element.comment}</li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n        <form onSubmit={submitComment}>\r\n          <input\r\n            type=\"text\"\r\n            value={comment}\r\n            onChange={(e) => setComment(e.target.value)}\r\n            placeholder=\"Write a comment...\"\r\n          />\r\n          <button type=\"submit\">Submit Comment</button>\r\n        </form>\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DetailView;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}