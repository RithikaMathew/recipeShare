{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rithi\\\\OneDrive\\\\Desktop\\\\web stack\\\\final - Copy\\\\client\\\\src\\\\pages\\\\DetailView.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport { supabase } from '../client';\nimport './DetailView.css';\nimport { formatDistanceToNow } from 'date-fns'; // used to display the distance between a given date and the current time in words\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DetailView = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [post, setPost] = useState({});\n  const [count, setCount] = useState(0);\n  const [comment, setComment] = useState(\"\");\n  const [comments, setComments] = useState([]);\n\n  // Fetch the post with the given id\n  useEffect(() => {\n    const fetchPost = async () => {\n      const {\n        data\n      } = await supabase.from('Posts').select().eq('id', id).single();\n      if (data) {\n        setPost(data);\n      } else {\n        console.error('Failed to fetch post data');\n      }\n    };\n    fetchPost();\n  }, [id]);\n\n  // Fetch the upvotes for the post\n  useEffect(() => {\n    const fetchCount = async () => {\n      const {\n        data\n      } = await supabase.from('Posts').select('upvotes').eq('id', id).single();\n      if (data) {\n        setCount(data.upvotes);\n      } else {\n        console.error('Failed to fetch upvotes');\n      }\n    };\n    fetchCount();\n  }, [id]);\n\n  // Update the upvotes for the post\n  const updateCount = async event => {\n    event.preventDefault();\n    await supabase.from('Posts').update({\n      upvotes: count + 1\n    }).eq('id', id);\n    setCount(count => count + 1);\n  };\n\n  // Delete the post\n  const deletePost = async event => {\n    event.preventDefault();\n    await supabase.from('Posts').delete().eq('id', id);\n    setTimeout(() => {\n      window.location = \"/read\";\n    }, 1000);\n  };\n\n  // Fetch the comments for the post\n  useEffect(() => {\n    const fetchComments = async () => {\n      const {\n        data\n      } = await supabase.from('Comments').select().eq('postId', id);\n      setComments(data);\n    };\n    fetchComments();\n  }, [id]);\n\n  // Submit a comment\n  const submitComment = async event => {\n    event.preventDefault();\n    if (!comment.trim()) return;\n\n    // Insert comment\n    const insertResponse = await supabase.from('Comments').insert([{\n      postId: id,\n      comment: comment\n    }]);\n\n    // Fetch comments after insertion\n    const selectResponse = await supabase.from('Comments').select().eq('postId', id);\n    setComments(selectResponse.data);\n    setComment(\"\"); // Clear comment field\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"DetailView\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row1\",\n      children: [post.created_at && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Posted \", formatDistanceToNow(new Date(post.created_at), {\n          addSuffix: true\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: `/edit/${id}`,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \" \\uD83D\\uDD8B\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: deletePost,\n        children: \" \\uD83D\\uDDD1\\uFE0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Title: \" + post.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), post.image && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: post.image,\n      alt: post.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Author: \" + post.author\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Description: \" + post.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"up\",\n      onClick: updateCount,\n      children: [\"\\uD83D\\uDC4D \", count, \" upvotes\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comments\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Comments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: comments.map((current_element, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: current_element.comment\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: submitComment,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: comment,\n          onChange: e => setComment(e.target.value),\n          placeholder: \"Write a comment...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit Comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n};\n_s(DetailView, \"EbcxaKVZOh0rPrnEtUhDotM+LhA=\", false, function () {\n  return [useParams];\n});\n_c = DetailView;\nexport default DetailView;\nvar _c;\n$RefreshReg$(_c, \"DetailView\");","map":{"version":3,"names":["React","useState","useEffect","useParams","Link","supabase","formatDistanceToNow","jsxDEV","_jsxDEV","DetailView","_s","id","post","setPost","count","setCount","comment","setComment","comments","setComments","fetchPost","data","from","select","eq","single","console","error","fetchCount","upvotes","updateCount","event","preventDefault","update","deletePost","delete","setTimeout","window","location","fetchComments","submitComment","trim","insertResponse","insert","postId","selectResponse","className","children","created_at","Date","addSuffix","fileName","_jsxFileName","lineNumber","columnNumber","to","onClick","title","image","src","alt","author","description","map","current_element","index","onSubmit","type","value","onChange","e","target","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/rithi/OneDrive/Desktop/web stack/final - Copy/client/src/pages/DetailView.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams, Link } from 'react-router-dom';\r\nimport { supabase } from '../client';\r\nimport './DetailView.css';\r\nimport { formatDistanceToNow } from 'date-fns'; // used to display the distance between a given date and the current time in words\r\n\r\nconst DetailView = () => {\r\n  const { id } = useParams();\r\n  const [post, setPost] = useState({});\r\n  const [count, setCount] = useState(0);\r\n  const [comment, setComment] = useState(\"\");\r\n  const [comments, setComments] = useState([]);\r\n\r\n  // Fetch the post with the given id\r\n  useEffect(() => {\r\n    const fetchPost = async () => {\r\n      const { data } = await supabase\r\n    .from('Posts')\r\n    .select()\r\n    .eq('id', id)\r\n    .single();\r\n\r\nif (data) {\r\n    setPost(data);\r\n} else {\r\n    console.error('Failed to fetch post data');\r\n}\r\n    };\r\n\r\n    fetchPost();\r\n  }, [id]);\r\n\r\n  // Fetch the upvotes for the post\r\n  useEffect(() => {\r\n    const fetchCount = async () => {\r\n      const { data } = await supabase\r\n    .from('Posts')\r\n    .select('upvotes')\r\n    .eq('id', id)\r\n    .single();\r\n\r\nif (data) {\r\n    setCount(data.upvotes);\r\n} else {\r\n    console.error('Failed to fetch upvotes');\r\n}\r\n    };\r\n\r\n    fetchCount();\r\n  }, [id]);\r\n\r\n  // Update the upvotes for the post\r\n  const updateCount = async (event) => {\r\n    event.preventDefault();\r\n\r\n    await supabase\r\n      .from('Posts')\r\n      .update({ upvotes: count + 1 })\r\n      .eq('id', id);\r\n\r\n    setCount((count) => count + 1);\r\n  };\r\n\r\n  // Delete the post\r\n  const deletePost = async (event) => {\r\n    event.preventDefault();\r\n    await supabase\r\n    .from('Posts')\r\n    .delete()\r\n    .eq('id', id);\r\n    setTimeout(() => {\r\n      window.location = \"/read\";\r\n  }, 1000);  };\r\n\r\n  // Fetch the comments for the post\r\n  useEffect(() => {\r\n    const fetchComments = async () => {\r\n      const { data } = await supabase\r\n        .from('Comments')\r\n        .select()\r\n        .eq('postId', id);\r\n      setComments(data);\r\n\r\n    };\r\n\r\n    fetchComments();\r\n  }, [id]);\r\n\r\n  // Submit a comment\r\n  const submitComment = async (event) => {\r\n    event.preventDefault();\r\n    if (!comment.trim()) return;\r\n\r\n    // Insert comment\r\n    const insertResponse = await supabase\r\n      .from('Comments')\r\n      .insert([{ postId: id, comment: comment }]);\r\n\r\n    // Fetch comments after insertion\r\n    const selectResponse = await supabase\r\n      .from('Comments')\r\n      .select()\r\n      .eq('postId', id);\r\n    setComments(selectResponse.data);\r\n\r\n\r\n    setComment(\"\"); // Clear comment field\r\n  };\r\n\r\n  return (\r\n    <div className=\"DetailView\">\r\n      <div className=\"row1\">\r\n        {post.created_at && (\r\n          <p>Posted {formatDistanceToNow(new Date(post.created_at), { addSuffix: true })}</p>\r\n        )}\r\n        <Link to={`/edit/${id}`}><button> 🖋️</button></Link>\r\n        <button onClick={deletePost}> 🗑️</button>\r\n      </div>\r\n      <h2>{\"Title: \" + post.title}</h2>\r\n      {post.image && (<img src={post.image} alt={post.title} />)}\r\n      <p>{\"Author: \" + post.author}</p>\r\n      <p>{\"Description: \" + post.description}</p>\r\n      <button id='up' onClick={updateCount}>👍 {count} upvotes</button>\r\n      <div className=\"comments\">\r\n        <h3>Comments</h3>\r\n        <div>\r\n          <ul>\r\n            {comments.map((current_element, index) => (\r\n              <li key={index}>{current_element.comment}</li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n        <form onSubmit={submitComment}>\r\n          <input\r\n            type=\"text\"\r\n            value={comment}\r\n            onChange={(e) => setComment(e.target.value)}\r\n            placeholder=\"Write a comment...\"\r\n          />\r\n          <button type=\"submit\">Submit Comment</button>\r\n        </form>\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DetailView;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}