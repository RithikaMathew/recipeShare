{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport { _generateLinkResponse, _noResolveJsonResponse, _request, _userResponse } from './lib/fetch';\nimport { resolveFetch } from './lib/helpers';\nimport { isAuthError } from './lib/errors';\nexport default class GoTrueAdminApi {\n  constructor({\n    url = '',\n    headers = {},\n    fetch\n  }) {\n    this.url = url;\n    this.headers = headers;\n    this.fetch = resolveFetch(fetch);\n    this.mfa = {\n      listFactors: this._listFactors.bind(this),\n      deleteFactor: this._deleteFactor.bind(this)\n    };\n  }\n  /**\n   * Removes a logged-in session.\n   * @param jwt A valid, logged-in JWT.\n   * @param scope The logout sope.\n   */\n  async signOut(jwt, scope = 'global') {\n    try {\n      await _request(this.fetch, 'POST', `${this.url}/logout?scope=${scope}`, {\n        headers: this.headers,\n        jwt,\n        noResolveJson: true\n      });\n      return {\n        data: null,\n        error: null\n      };\n    } catch (error) {\n      if (isAuthError(error)) {\n        return {\n          data: null,\n          error\n        };\n      }\n      throw error;\n    }\n  }\n  /**\n   * Sends an invite link to an email address.\n   * @param email The email address of the user.\n   * @param options Additional options to be included when inviting.\n   */\n  async inviteUserByEmail(email, options = {}) {\n    try {\n      return await _request(this.fetch, 'POST', `${this.url}/invite`, {\n        body: {\n          email,\n          data: options.data\n        },\n        headers: this.headers,\n        redirectTo: options.redirectTo,\n        xform: _userResponse\n      });\n    } catch (error) {\n      if (isAuthError(error)) {\n        return {\n          data: {\n            user: null\n          },\n          error\n        };\n      }\n      throw error;\n    }\n  }\n  /**\n   * Generates email links and OTPs to be sent via a custom email provider.\n   * @param email The user's email.\n   * @param options.password User password. For signup only.\n   * @param options.data Optional user metadata. For signup only.\n   * @param options.redirectTo The redirect url which should be appended to the generated link\n   */\n  async generateLink(params) {\n    try {\n      const {\n          options\n        } = params,\n        rest = __rest(params, [\"options\"]);\n      const body = Object.assign(Object.assign({}, rest), options);\n      if ('newEmail' in rest) {\n        // replace newEmail with new_email in request body\n        body.new_email = rest === null || rest === void 0 ? void 0 : rest.newEmail;\n        delete body['newEmail'];\n      }\n      return await _request(this.fetch, 'POST', `${this.url}/admin/generate_link`, {\n        body: body,\n        headers: this.headers,\n        xform: _generateLinkResponse,\n        redirectTo: options === null || options === void 0 ? void 0 : options.redirectTo\n      });\n    } catch (error) {\n      if (isAuthError(error)) {\n        return {\n          data: {\n            properties: null,\n            user: null\n          },\n          error\n        };\n      }\n      throw error;\n    }\n  }\n  // User Admin API\n  /**\n   * Creates a new user.\n   * This function should only be called on a server. Never expose your `service_role` key in the browser.\n   */\n  async createUser(attributes) {\n    try {\n      return await _request(this.fetch, 'POST', `${this.url}/admin/users`, {\n        body: attributes,\n        headers: this.headers,\n        xform: _userResponse\n      });\n    } catch (error) {\n      if (isAuthError(error)) {\n        return {\n          data: {\n            user: null\n          },\n          error\n        };\n      }\n      throw error;\n    }\n  }\n  /**\n   * Get a list of users.\n   *\n   * This function should only be called on a server. Never expose your `service_role` key in the browser.\n   * @param params An object which supports `page` and `perPage` as numbers, to alter the paginated results.\n   */\n  async listUsers(params) {\n    var _a, _b, _c, _d, _e, _f, _g;\n    try {\n      const pagination = {\n        nextPage: null,\n        lastPage: 0,\n        total: 0\n      };\n      const response = await _request(this.fetch, 'GET', `${this.url}/admin/users`, {\n        headers: this.headers,\n        noResolveJson: true,\n        query: {\n          page: (_b = (_a = params === null || params === void 0 ? void 0 : params.page) === null || _a === void 0 ? void 0 : _a.toString()) !== null && _b !== void 0 ? _b : '',\n          per_page: (_d = (_c = params === null || params === void 0 ? void 0 : params.perPage) === null || _c === void 0 ? void 0 : _c.toString()) !== null && _d !== void 0 ? _d : ''\n        },\n        xform: _noResolveJsonResponse\n      });\n      if (response.error) throw response.error;\n      const users = await response.json();\n      const total = (_e = response.headers.get('x-total-count')) !== null && _e !== void 0 ? _e : 0;\n      const links = (_g = (_f = response.headers.get('link')) === null || _f === void 0 ? void 0 : _f.split(',')) !== null && _g !== void 0 ? _g : [];\n      if (links.length > 0) {\n        links.forEach(link => {\n          const page = parseInt(link.split(';')[0].split('=')[1].substring(0, 1));\n          const rel = JSON.parse(link.split(';')[1].split('=')[1]);\n          pagination[`${rel}Page`] = page;\n        });\n        pagination.total = parseInt(total);\n      }\n      return {\n        data: Object.assign(Object.assign({}, users), pagination),\n        error: null\n      };\n    } catch (error) {\n      if (isAuthError(error)) {\n        return {\n          data: {\n            users: []\n          },\n          error\n        };\n      }\n      throw error;\n    }\n  }\n  /**\n   * Get user by id.\n   *\n   * @param uid The user's unique identifier\n   *\n   * This function should only be called on a server. Never expose your `service_role` key in the browser.\n   */\n  async getUserById(uid) {\n    try {\n      return await _request(this.fetch, 'GET', `${this.url}/admin/users/${uid}`, {\n        headers: this.headers,\n        xform: _userResponse\n      });\n    } catch (error) {\n      if (isAuthError(error)) {\n        return {\n          data: {\n            user: null\n          },\n          error\n        };\n      }\n      throw error;\n    }\n  }\n  /**\n   * Updates the user data.\n   *\n   * @param attributes The data you want to update.\n   *\n   * This function should only be called on a server. Never expose your `service_role` key in the browser.\n   */\n  async updateUserById(uid, attributes) {\n    try {\n      return await _request(this.fetch, 'PUT', `${this.url}/admin/users/${uid}`, {\n        body: attributes,\n        headers: this.headers,\n        xform: _userResponse\n      });\n    } catch (error) {\n      if (isAuthError(error)) {\n        return {\n          data: {\n            user: null\n          },\n          error\n        };\n      }\n      throw error;\n    }\n  }\n  /**\n   * Delete a user. Requires a `service_role` key.\n   *\n   * @param id The user id you want to remove.\n   * @param shouldSoftDelete If true, then the user will be soft-deleted (setting `deleted_at` to the current timestamp and disabling their account while preserving their data) from the auth schema.\n   * Defaults to false for backward compatibility.\n   *\n   * This function should only be called on a server. Never expose your `service_role` key in the browser.\n   */\n  async deleteUser(id, shouldSoftDelete = false) {\n    try {\n      return await _request(this.fetch, 'DELETE', `${this.url}/admin/users/${id}`, {\n        headers: this.headers,\n        body: {\n          should_soft_delete: shouldSoftDelete\n        },\n        xform: _userResponse\n      });\n    } catch (error) {\n      if (isAuthError(error)) {\n        return {\n          data: {\n            user: null\n          },\n          error\n        };\n      }\n      throw error;\n    }\n  }\n  async _listFactors(params) {\n    try {\n      const {\n        data,\n        error\n      } = await _request(this.fetch, 'GET', `${this.url}/admin/users/${params.userId}/factors`, {\n        headers: this.headers,\n        xform: factors => {\n          return {\n            data: {\n              factors\n            },\n            error: null\n          };\n        }\n      });\n      return {\n        data,\n        error\n      };\n    } catch (error) {\n      if (isAuthError(error)) {\n        return {\n          data: null,\n          error\n        };\n      }\n      throw error;\n    }\n  }\n  async _deleteFactor(params) {\n    try {\n      const data = await _request(this.fetch, 'DELETE', `${this.url}/admin/users/${params.userId}/factors/${params.id}`, {\n        headers: this.headers\n      });\n      return {\n        data,\n        error: null\n      };\n    } catch (error) {\n      if (isAuthError(error)) {\n        return {\n          data: null,\n          error\n        };\n      }\n      throw error;\n    }\n  }\n}","map":{"version":3,"names":["__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","_generateLinkResponse","_noResolveJsonResponse","_request","_userResponse","resolveFetch","isAuthError","GoTrueAdminApi","constructor","url","headers","fetch","mfa","listFactors","_listFactors","bind","deleteFactor","_deleteFactor","signOut","jwt","scope","noResolveJson","data","error","inviteUserByEmail","email","options","body","redirectTo","xform","user","generateLink","params","rest","assign","new_email","newEmail","properties","createUser","attributes","listUsers","_a","_b","_c","_d","_e","_f","_g","pagination","nextPage","lastPage","total","response","query","page","toString","per_page","perPage","users","json","get","links","split","forEach","link","parseInt","substring","rel","JSON","parse","getUserById","uid","updateUserById","deleteUser","id","shouldSoftDelete","should_soft_delete","userId","factors"],"sources":["C:/Users/rithi/OneDrive/Desktop/web stack/hw7/client/node_modules/@supabase/auth-js/dist/module/GoTrueAdminApi.js"],"sourcesContent":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { _generateLinkResponse, _noResolveJsonResponse, _request, _userResponse, } from './lib/fetch';\nimport { resolveFetch } from './lib/helpers';\nimport { isAuthError } from './lib/errors';\nexport default class GoTrueAdminApi {\n    constructor({ url = '', headers = {}, fetch, }) {\n        this.url = url;\n        this.headers = headers;\n        this.fetch = resolveFetch(fetch);\n        this.mfa = {\n            listFactors: this._listFactors.bind(this),\n            deleteFactor: this._deleteFactor.bind(this),\n        };\n    }\n    /**\n     * Removes a logged-in session.\n     * @param jwt A valid, logged-in JWT.\n     * @param scope The logout sope.\n     */\n    async signOut(jwt, scope = 'global') {\n        try {\n            await _request(this.fetch, 'POST', `${this.url}/logout?scope=${scope}`, {\n                headers: this.headers,\n                jwt,\n                noResolveJson: true,\n            });\n            return { data: null, error: null };\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return { data: null, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Sends an invite link to an email address.\n     * @param email The email address of the user.\n     * @param options Additional options to be included when inviting.\n     */\n    async inviteUserByEmail(email, options = {}) {\n        try {\n            return await _request(this.fetch, 'POST', `${this.url}/invite`, {\n                body: { email, data: options.data },\n                headers: this.headers,\n                redirectTo: options.redirectTo,\n                xform: _userResponse,\n            });\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return { data: { user: null }, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Generates email links and OTPs to be sent via a custom email provider.\n     * @param email The user's email.\n     * @param options.password User password. For signup only.\n     * @param options.data Optional user metadata. For signup only.\n     * @param options.redirectTo The redirect url which should be appended to the generated link\n     */\n    async generateLink(params) {\n        try {\n            const { options } = params, rest = __rest(params, [\"options\"]);\n            const body = Object.assign(Object.assign({}, rest), options);\n            if ('newEmail' in rest) {\n                // replace newEmail with new_email in request body\n                body.new_email = rest === null || rest === void 0 ? void 0 : rest.newEmail;\n                delete body['newEmail'];\n            }\n            return await _request(this.fetch, 'POST', `${this.url}/admin/generate_link`, {\n                body: body,\n                headers: this.headers,\n                xform: _generateLinkResponse,\n                redirectTo: options === null || options === void 0 ? void 0 : options.redirectTo,\n            });\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return {\n                    data: {\n                        properties: null,\n                        user: null,\n                    },\n                    error,\n                };\n            }\n            throw error;\n        }\n    }\n    // User Admin API\n    /**\n     * Creates a new user.\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     */\n    async createUser(attributes) {\n        try {\n            return await _request(this.fetch, 'POST', `${this.url}/admin/users`, {\n                body: attributes,\n                headers: this.headers,\n                xform: _userResponse,\n            });\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return { data: { user: null }, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Get a list of users.\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     * @param params An object which supports `page` and `perPage` as numbers, to alter the paginated results.\n     */\n    async listUsers(params) {\n        var _a, _b, _c, _d, _e, _f, _g;\n        try {\n            const pagination = { nextPage: null, lastPage: 0, total: 0 };\n            const response = await _request(this.fetch, 'GET', `${this.url}/admin/users`, {\n                headers: this.headers,\n                noResolveJson: true,\n                query: {\n                    page: (_b = (_a = params === null || params === void 0 ? void 0 : params.page) === null || _a === void 0 ? void 0 : _a.toString()) !== null && _b !== void 0 ? _b : '',\n                    per_page: (_d = (_c = params === null || params === void 0 ? void 0 : params.perPage) === null || _c === void 0 ? void 0 : _c.toString()) !== null && _d !== void 0 ? _d : '',\n                },\n                xform: _noResolveJsonResponse,\n            });\n            if (response.error)\n                throw response.error;\n            const users = await response.json();\n            const total = (_e = response.headers.get('x-total-count')) !== null && _e !== void 0 ? _e : 0;\n            const links = (_g = (_f = response.headers.get('link')) === null || _f === void 0 ? void 0 : _f.split(',')) !== null && _g !== void 0 ? _g : [];\n            if (links.length > 0) {\n                links.forEach((link) => {\n                    const page = parseInt(link.split(';')[0].split('=')[1].substring(0, 1));\n                    const rel = JSON.parse(link.split(';')[1].split('=')[1]);\n                    pagination[`${rel}Page`] = page;\n                });\n                pagination.total = parseInt(total);\n            }\n            return { data: Object.assign(Object.assign({}, users), pagination), error: null };\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return { data: { users: [] }, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Get user by id.\n     *\n     * @param uid The user's unique identifier\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     */\n    async getUserById(uid) {\n        try {\n            return await _request(this.fetch, 'GET', `${this.url}/admin/users/${uid}`, {\n                headers: this.headers,\n                xform: _userResponse,\n            });\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return { data: { user: null }, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Updates the user data.\n     *\n     * @param attributes The data you want to update.\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     */\n    async updateUserById(uid, attributes) {\n        try {\n            return await _request(this.fetch, 'PUT', `${this.url}/admin/users/${uid}`, {\n                body: attributes,\n                headers: this.headers,\n                xform: _userResponse,\n            });\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return { data: { user: null }, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Delete a user. Requires a `service_role` key.\n     *\n     * @param id The user id you want to remove.\n     * @param shouldSoftDelete If true, then the user will be soft-deleted (setting `deleted_at` to the current timestamp and disabling their account while preserving their data) from the auth schema.\n     * Defaults to false for backward compatibility.\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     */\n    async deleteUser(id, shouldSoftDelete = false) {\n        try {\n            return await _request(this.fetch, 'DELETE', `${this.url}/admin/users/${id}`, {\n                headers: this.headers,\n                body: {\n                    should_soft_delete: shouldSoftDelete,\n                },\n                xform: _userResponse,\n            });\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return { data: { user: null }, error };\n            }\n            throw error;\n        }\n    }\n    async _listFactors(params) {\n        try {\n            const { data, error } = await _request(this.fetch, 'GET', `${this.url}/admin/users/${params.userId}/factors`, {\n                headers: this.headers,\n                xform: (factors) => {\n                    return { data: { factors }, error: null };\n                },\n            });\n            return { data, error };\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return { data: null, error };\n            }\n            throw error;\n        }\n    }\n    async _deleteFactor(params) {\n        try {\n            const data = await _request(this.fetch, 'DELETE', `${this.url}/admin/users/${params.userId}/factors/${params.id}`, {\n                headers: this.headers,\n            });\n            return { data, error: null };\n        }\n        catch (error) {\n            if (isAuthError(error)) {\n                return { data: null, error };\n            }\n            throw error;\n        }\n    }\n}\n//# sourceMappingURL=GoTrueAdminApi.js.map"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}